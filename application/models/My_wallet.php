<?phpclass My_wallet extends CI_Model{    /*      Determines if a given item_id is an item kit     */    function exists($wallet_id)    {        $this->db->from('wallets');        $this->db->where('wallet_id', $wallet_id);        $query = $this->db->get();        return ($query->num_rows() == 1);    }    function get_total()    {        // credit        $this->load->model("role");        $person_info = $this->Employee->get_logged_in_employee_info();        $role_info = $this->role->get_info($person_info->role_id);                $user_id = $person_info->person_id;                $user_ids = [];        $user_ids[] = $user_id;                $tmp = json_decode($role_info->low_level, 1);        if (is_array($tmp) && count($tmp) > 0 )        {            $res = $this->role->get_staff_user_ids(implode(",", $tmp));            foreach($res as $user_id)            {                $user_ids[] = $user_id;            }        }                $user_ids = implode(",", $user_ids);                $where = '';        if (is_plugin_active("branches"))        {            $where .= ' AND branch_id = ' . $this->session->userdata("branch_id");        }        $sql = "SELECT SUM(amount) AS amount FROM " . $this->db->dbprefix("wallets") . " WHERE wallet_type = 'credit' AND added_by IN ($user_ids) $where";        $query = $this->db->query($sql);        $credit = $query->row()->amount;        // debit        $sql = "SELECT SUM(amount) AS amount FROM " . $this->db->dbprefix("wallets") . " WHERE wallet_type = 'debit' AND added_by IN ($user_ids) $where";        $query = $this->db->query($sql);        $debit = $query->row()->amount;                // transfer to        $sql = "SELECT SUM(amount) AS amount FROM " . $this->db->dbprefix("wallets") . " WHERE wallet_type = 'transfer' AND added_by IN ($user_ids) AND transfer_to NOT IN ($user_ids) $where";        $query = $this->db->query($sql);        $transfer_to = $query->row()->amount;        // transfer to me        $sql = "SELECT SUM(amount) AS amount FROM " . $this->db->dbprefix("wallets") . " WHERE wallet_type = 'transfer' AND transfer_to IN ($user_ids) $where";        $query = $this->db->query($sql);        $transfer_to_me = $query->row()->amount;        return $credit - $debit - $transfer_to + $transfer_to_me;    }    function get_all($limit = 10000, $offset = 0, $search = "", $order = array(), $count_only = false, $selected_user = '', $filters = [])    {        //$user_id = $this->Employee->get_logged_in_employee_info()->person_id;        $user_id = 0;                if ( $selected_user > 0 )        {            $user_id = $selected_user;        }                $sorter = array(            "",            "name",            "amount",            "descriptions",            "wallet_type",            "trans_date",        );                if ( $count_only )        {            $this->apply_filters( $user_id, $search, $filters );            return $this->db->count_all_results();        }        $this->apply_filters( $user_id, $search, $filters );                if (count($order) > 0 && $order['index'] < count($sorter))        {            $this->db->order_by($sorter[$order['index']], $order['direction']);        }         else        {            $this->db->order_by("wallet_id", "desc");        }        $this->db->limit($limit);        $this->db->offset($offset);        $query = $this->db->get();                return $query;    }        private function get_view_user_ids( $role_id )    {        $this->load->model("role");        $role_info = $this->role->get_info($role_id);                $low_level_ids = json_decode($role_info->low_level, 1);                $user_ids = [];        if ( count($low_level_ids) > 0 )        {            $user_ids = $this->role->get_staff_user_ids(implode(",", $low_level_ids));        }                return $user_ids;    }        function apply_filters( $user_id, $search = '', $filters = [] )    {        $loggedin_user = $this->Employee->get_logged_in_employee_info();        $user_ids = $this->get_view_user_ids($loggedin_user->role_id);                $this->db->from('wallets');        $this->db->join('people p', 'p.person_id = wallets.added_by', 'LEFT');                if ($search !== "")        {            $this->db->where('amount LIKE ', '%' . $search . '%');            $this->db->or_where('descriptions LIKE', '%' . $search . '%');        }                if ( $user_id > 0 )        {            $this->db->where("wallets.added_by", $user_id);        }        else        {            if ( count($user_ids) > 0 )            {                $this->db->where_in("wallets.added_by", $user_ids);            }            else            {                $this->db->where_in("wallets.added_by", $loggedin_user->person_id);                            }        }                if ( isset($filters["trans_date_from"]) && $filters["trans_date_from"] != '' )        {            $this->db->where("trans_date >=", $filters["trans_date_from"]);        }                if ( isset($filters["trans_date_to"]) && $filters["trans_date_to"] != '' )        {            $this->db->where("trans_date <=", $filters["trans_date_to"]);        }    }    function count_all()    {        $this->db->from('wallets');        return $this->db->count_all_results();    }    function get_multiple_wallets($wallet_ids = -1)    {        $this->db->from('wallets');        if ($wallet_ids > -1)        {            $this->db->where_in('wallet_id', $wallet_ids);        }        return $this->db->get()->result();    }    /*      Gets information about a particular item kit     */    function get_info($wallet_id)    {        $this->db->from('wallets');        $this->db->where('wallet_id', $wallet_id);        $query = $this->db->get();        if ($query->num_rows() == 1)        {            return $query->row();        }         else        {            //Get empty base parent object, as $item_kit_id is NOT an item kit            $item_obj = new stdClass();            //Get all the fields from items table            $fields = $this->db->list_fields('wallets');            foreach ($fields as $field)             {                $item_obj->$field = '';            }            return $item_obj;        }    }    /*      Inserts or updates an item kit     */    function save(&$wallet_data, $wallet_id = false)    {        $user_id = $this->Employee->get_logged_in_employee_info()->person_id;        $wallet_data["added_by"] = $user_id;                if (is_plugin_active("branches"))        {            $wallet_data["branch_id"] = $this->session->userdata("branch_id");        }        if (!$wallet_id or ! $this->exists($wallet_id))        {            if ($this->db->insert('wallets', $wallet_data))            {                $wallet_data['wallet_id'] = $this->db->insert_id();                return true;            }            return false;        }        $this->db->where('wallet_id', $wallet_id);        return $this->db->update('wallets', $wallet_data);    }    /*      Deletes one item kit     */    function delete($wallet_id)    {        return $this->db->delete('wallets', array('wallet_id' => $wallet_id));    }    /*      Deletes a list of item kits     */    function delete_list($wallet_ids)    {        $this->db->where_in('wallet_id', $wallet_ids);        return $this->db->delete('wallets');    }        function clear_deleted_payments()    {        $sql = "SELECT  wallet_id,                         descriptions                 FROM c19_wallets                 WHERE descriptions                 LIKE '%payments/view%'";        $query = $this->db->query( $sql );                if ( $query && $query->num_rows() > 0 )        {            foreach( $query->result() as $row )            {                preg_match_all('#\bhttps?://[^,\s()<>]+(?:\([\w\d]+\)|([^,[:punct:]\s]|/))#', $row->descriptions, $match);                if ( isset($match[0][0]) )                {                    $int = (int) filter_var($match[0][0], FILTER_SANITIZE_NUMBER_INT);                                        $s = "                        SELECT  a.loan_payment_id,                                 a.delete_flag,                                 c.deleted                         FROM c19_loan_payments a                         LEFT JOIN c19_people b ON b.person_id = a.customer_id                        LEFT JOIN c19_customers c ON c.person_id = a.customer_id                        WHERE a.loan_payment_id = '$int'                        ";                                        $q = $this->db->query($s);                                        if ( $q && $q->num_rows() > 0)                    {                        $r = $q->row();                        if ( $r->delete_flag || $r->deleted )                        {                            $this->db->where("wallet_id", $row->wallet_id)->delete("wallets");                        }                    }                }            }        }    }}?>